define main(){
0:
	 %0.1 = 0
	 %-1.1 = 0
	 %0.2 = load i64, i64* @num_fibs, align 8
	 call i64  @fib()
	 br label %1
1:
	 ret void
}
define fib(i64 %1.0){
4:
	 %3.1 = 0
	 %2.1 = 0
	 %-1.1 = 0
	 %2.2 = 0
	 %3.2 = 1
	 call i64  @fib_aux()
	 br label %5
5:
	 ret void
}
define fib_aux(i64 %4.0, i64 %5.0, i64 %6.0){
9:
	 %8.6 = 0
	 %-1.6 = 0
	 %7.1 = 0
	 %9.6 = 0
	 %10.5 = 0
	 %7.4 = 1
	 %cond0 = icomp slt i64 6.-1, 7.4
	 br i1 %cond0, label %13, label %12
13:
	 br label %10
12:
	 br label %14
10:
	 %8.3 = phi i64 [ %8.5, %14], [ %8.6, %13] 
	 %-1.3 = phi i64 [ %-1.5, %14], [ %-1.6, %13] 
	 %4.2 = phi i64 [ %4.3, %14], [ %4.0, %13] 
	 %6.2 = phi i64 [ %6.3, %14], [ %6.0, %13] 
	 %5.2 = phi i64 [ %5.3, %14], [ %5.0, %13] 
	 %9.3 = phi i64 [ %9.5, %14], [ %9.6, %13] 
	 %10.3 = phi i64 [ %10.4, %14], [ %10.5, %13] 
	 ret void
14:
	 call i64  @bx_print_int()
	 %8.4 = %4.3
	 %8.5 = add nsw i64 5.3, 8.4
	 %9.4 = %6.3
	 %10.4 = 1
	 %9.5 = sub nsw i64 10.4, 9.4
	 call i64  @fib_aux()
	 br label %10
}
