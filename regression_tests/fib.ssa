GLOBAL num_fibs = 30 : int64

CALLABLE "main":
enter: L0
leave: L32765
----
L0:
	move 0, 0.1
	move 0, -1.1
	load num_fibs+0, 0.2
	call fib(0.2) >> -1.2
	leave: L1,
L1:
	return-1.2
	leave: 
END CALLABLE


CALLABLE "fib":
enter: L4
leave: L32765
----
L4:
	move 0, 3.1
	move 0, 2.1
	move 0, 1.1
	move 0, -1.1
	move 0, 2.2
	move 1, 3.2
	call fib_aux(2.2, 3.2, 1.1) >> -1.2
	leave: L5,
L5:
	return-1.2
	leave: 
END CALLABLE


CALLABLE "fib_aux":
enter: L9
leave: L32765
----
L9:
	move 0, 8.6
	move 0, -1.6
	move 0, 4.3
	move 0, 7.1
	move 0, 6.3
	move 0, 5.3
	move 0, 9.6
	move 0, 10.5
	move 1, 7.4
	bbranch jl, 6.3, 7.4
	leave: L13,L12,
L13:
	leave: L10,
L12:
	leave: L14,
L10:
	phi (8.5, 8.6) >> 8.3
	phi (-1.5, -1.6) >> -1.3
	phi (9.5, 9.6) >> 9.3
	phi (10.4, 10.5) >> 10.3
	return-1.3
	leave: 
L14:
	call bx_print_int(4.3) >> -1.4
	copy 4.3, 8.4
	binop add, 5.3, 8.4 >> 8.5
	copy 6.3, 9.4
	move 1, 10.4
	binop sub, 10.4, 9.4 >> 9.5
	call fib_aux(5.3, 8.5, 9.5) >> -1.5
	leave: L10,
END CALLABLE


