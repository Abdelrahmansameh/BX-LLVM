GLOBAL num_fibs = 30 : int64

CALLABLE "main":
enter: L10
leave: L0
----
L0:
	load num_fibs+0, 0.0
	call fib(0.0), -1.0
	leave: L1,
L1:
	return-1.0
	leave: 
END CALLABLE


CALLABLE "fib":
enter: L10
leave: L0
----
L4:
	move 0, 2.0
	move 1, 3.0
	call fib_aux(2.0, 3.0, 1.0), -1.0
	leave: L5,
L5:
	return-1.0
	leave: 
END CALLABLE


CALLABLE "fib_aux":
enter: L10
leave: L0
----
L9:
	move 1, 7.0
	bbranch jl, 6.0, 7.0
	leave: L13,L12,
L13:
	leave: L10,
L12:
	leave: L14,
L10:
	return-1.0
	leave: 
L14:
	call bx_print_int(4.0), -1.0
	copy 4.0, 8.0
	binop add, 5.0, 8.0
	copy 6.0, 9.0
	move 1, 10.0
	binop sub, 10.0, 9.0
	call fib_aux(5.0, 8.0, 9.0), -1.0
	leave: L10,
END CALLABLE


